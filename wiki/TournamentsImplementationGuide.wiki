== Введение ==

Проведение турниров является краеугольным камнем нашей системы. В данном документе описывается текущее видение этого компонента.

== Термины и определения ==

Турнир - состязание нескольких интеллектов, состоящее, возможно, из нескольких этапов.

Этап турнира - состязание нескольких интеллектов по некоторой игровой дисциплине (см. http://code.google.com/p/warspot/wiki/WarspotStageRules)

Подсчёт очков - совокупность правил, по которым множество побед и поражений интеллектов трансформируется в их ранг.

== Изменения объектной модели пользователей ==

В текущей реализации все пользователи по своим правам идентичны. Однако для проведения турнира этого недостаточно. Мы можем выделить следующие роли:

 * Простой пользователь - пользователь системы, который может принимать участие в турнире, загружать интеллекты и запускать единичные матчи

 * Администратор турниров - то же, что и простой пользователь + возможность создавать турниры и приглашать на них других пользователей

 * Метаадминистратор - возможно, не пользователь системы, имеет возможность назначать администраторов турнира из простых пользователей и преждевременно прерывать их полномочия

Необходимо отметить, что *роли 1 и 2 назначаются на определённое время*. Валидность пользователя определяется во время логина.

Примерная структура базы данных:

http://warspot.googlecode.com/files/Drawing2.png

== Обработка турниров ==

Фундаментально у турниров есть три состояния:

  * Idle - ожидание следующего этапа
  * Working - обработка следующего этапа
  * Finished - турнир окончен, результаты готовы

Так как логика проведения турниров достаточно легковесна с вычислительной точки зрения, а бОльшая часть времени проводится в ожидании обсчёта результата матчей, предлагается не использовать отдельную роль для обсчёта турниров, а один поток в одной из ролей.

Изменение состояния этапа и турнира может произойти в результате следующих событий:

  * Наступило время запуска очередного этапа
  * Закончен обсчёт текущего набора матчей

Проверка возможного изменения состояния турниров запускается по одному из следующих условий:

  * прошло N минут с конца предыдущего запуска (на данном этапе считаем N=5)
  * наступило время запуска нового этапа

Для анализа второго условия достаточно проверить, у всех ли боёв, связанных с выбранным турниром, есть результаты. Таким образом, одним запросом к базе можно выбрать все запущенные турниры, у которых может измениться состояние.

При запуске многоэтапного турнира формируется блоб с текущим состоянием турнира (промежуточные таблицы результатов). При запуске очередного этапа турнира формируется блоб состояния этапа, в котором в произвольной форме (например, в форме сериализованного объекта) хранятся данные этапа (например, иерархия матчей и промежуточные результаты). В случае одноэтапного турнира блоб турнира совпадает по сути с блобом этапа. Использование блоба позволяет меньше заморачиваться с наложением разных систем правил этапа на базу данных.

Бизнес-логика этапа заключается в формировании на основе текущего внутреннего ранга игроков заявок на бои, после чего ожидается из окончание. Затем процесс повторяется до формирования окончательного рейтинга по этапу.

Бизнес-логика турнира между этапами заключается в аггрегировании результатов этапов, возможно, отсеивании участников и формировании окончательного отчёта о результате.

== Администратор турнира (админ) ==

Админ может создавать и удалять турниры. При создании он указывает, является ли турнир публичным или приватным, максимальное число игроков, а также создаёт этапы. Кроме того админ имеет право назначать участников турнира.

== Метаадминистратор (метаадмин) ==

На текущей итерации единственная роль метаадмина - это назначать пользователей админами на определённый срок.